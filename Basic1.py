#print absolute value of an integer
#以#开头的语句是注释，注释是给人看的，可以是任意内容，解释器会忽略掉注释
#	其他每一行都是一个语句，当语句以冒号:结尾时，缩进的语句视为代码块。缩进
#	有利有弊。好处是强迫你写出格式化的代码，但没有规定缩进是几个空格还是Tab。
#	按照约定俗成的管理，应该始终坚持使用4个空格的缩进。
#缩进的另一个好处是强迫你写出缩进较少的代码，你会倾向于把一段很长的代码拆分成
#	若干函数，从而得到缩进较少的代码。
#缩进的坏处就是“复制-粘贴”功能失效了，这是最坑爹的地方。当你重构代码时，粘贴
#	过去的代码必须重新检查缩进是否正确。此外，IDE很难像格式化Java代码那样格式
#	化Python代码
#注意：Python程序是大小写敏感的，如果写错了大小写，程序会报错。Python使用缩进
#	来组织代码块，请务必遵守约定俗成的习惯，坚持使用4个空格的缩进。在文本编辑器
#	中，需要设置把Tab自动转换为4个空格，确保不混用Tab和空格。
a=-111
if a>= 0:
    print(a)
else:
    print(-a)
